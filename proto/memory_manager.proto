syntax = "proto3";

package memorymanager;

service MemoryManager {
    // Crea un bloque de memoria y retorna un ID
    rpc Create(CreateRequest) returns (CreateResponse);

    // Asigna un valor a un bloque de memoria
    rpc Set(SetRequest) returns (SetResponse);

    // Obtiene el valor de un bloque de memoria
    rpc Get(GetRequest) returns (GetResponse);

    // Incrementa el conteo de referencias de un bloque de memoria
    rpc IncreaseRefCount(IncreaseRefCountRequest) returns (IncreaseRefCountResponse);

    // Decrementa el conteo de referencias de un bloque de memoria
    rpc DecreaseRefCount(DecreaseRefCountRequest) returns (DecreaseRefCountResponse);
}

// Mensajes para Create
message CreateRequest {
    int32 size = 1;  // Tamaño del bloque
    string type = 2;  // Tipo de dato (por ejemplo, "int", "float", etc.)
}

message CreateResponse {
    bool success = 1;
    int32 id = 2;  // ID del bloque creado
}

// Mensajes para Set
message SetRequest {
    int32 id = 1;  // ID del bloque
    oneof value {
        int32 int_value = 2;    // Valor entero
        float float_value = 3;   // Valor flotante
        string string_value = 4; // Valor cadena
    }
}

message SetResponse {
    bool success = 1;  // Indica si la operación fue exitosa
}

// Mensajes para Get
message GetRequest {
    int32 id = 1;  // ID del bloque
}

message GetResponse {
    bool success = 1;  // Indica si la operación fue exitosa
    oneof value {
        int32 int_value = 2;    // Valor entero
        float float_value = 3;   // Valor flotante
        string string_value = 4; // Valor cadena
    }
}

// Mensajes para IncreaseRefCount
message IncreaseRefCountRequest {
    int32 id = 1;  // ID del bloque
}

message IncreaseRefCountResponse {
    bool success = 1;  // Indica si la operación fue exitosa
}

// Mensajes para DecreaseRefCount
message DecreaseRefCountRequest {
    int32 id = 1;  // ID del bloque
}

message DecreaseRefCountResponse {
    bool success = 1;  // Indica si la operación fue exitosa
}